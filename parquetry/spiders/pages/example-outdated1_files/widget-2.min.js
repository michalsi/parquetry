CSV.COLUMN_SEPARATOR = ';';

$(function() {
  "use strict";

  var params = getQueryParams(location.search),
    typNieruchomosci = parseInt(params.typ_nieruchomosci),
    cena = parseInt(params.cena),
    powierzchnia = params.powierzchnia,
    wojewodztwo = params.wojewodztwo,
    miasto = params.miasto,
    dzielnica = params.dzielnica,
    wojewodztwoNazwa = params.wojewodztwo_nazwa,
    miastoNazwa = params.miasto_nazwa,
    dzielnicaNazwa = params.dzielnica_nazwa,
    prefix = params.prefix || '',
    cenaZaM2 = cena / powierzchnia,
    chart,
    colors = ['#0EB44D', '#0881B5', '#FE6F00'],
    savedData = [],
    savedDataMeta = [],
    onlyTrends = !(cena && powierzchnia && !params.report),
    files = ['DZ10126.csv', 'GUS_DZ1011465.csv', 'GUS_M101.csv', 'GUS_M201.csv', 'GUS_M401.csv', 'GUS_W101.csv', 'GUS_W201.csv', 'GUS_W401.csv', 'M101.csv', 'M201.csv', 'M401.csv', 'W101.csv', 'W201.csv', 'W401.csv'],
    currentChartType;

  if(params.report) {
    colors[0] = '#fab800';
    colors[1] = '#3db1d7';
  }

  var loadData = function(options, callback) {
    var fileName = prefix,
      filePath;
    if (options.locationType === 'dzielnica') {
      fileName += 'DZ' + typNieruchomosci + options.parentLocationId;
    } else if (options.locationType === 'miasto') {
      fileName += 'M' + typNieruchomosci;
    } else if (options.locationType === 'wojewodztwo') {
      fileName += 'W' + typNieruchomosci;
    }
    fileName += '.csv';
    filePath = 'csv/ceny/' + fileName;
    if (files.indexOf(fileName) === -1) {
      callback(null);
    } else {
      $.ajax(filePath)
      .pipe(CSV.parse)
      .done(function(data) {
        callback(data);
      })
      .fail(function() {
        callback(null);
      });
    }
  };

  var drawChart = function(data, locationType, locationId, locationName, chartType, interval, area) {
    var columnId,
      columnLegend = [],
      columnData = [];

    data[0].forEach(function(val, i) {
      if (val.split('[zl]')[0] === locationId) {
        columnId = i;
      }
    });
    data.forEach(function(val, i) {
      if (i > 0) {
        val.forEach(function(v, j) {
          if (j === 0) {
            var qNum = parseInt(v.split(' kw')[0]),
              vv;
            if(!params.report) {
              if (qNum === 1) vv = 'III';
              if (qNum === 2) vv = 'VI';
              if (qNum === 3) vv = 'IX';
              if (qNum === 4) vv = 'XII';
              vv += '/' + v.slice(-2);
            } else {
              if (qNum === 1) vv = 'I';
              if (qNum === 2) vv = 'II';
              if (qNum === 3) vv = 'III';
              if (qNum === 4) vv = 'IV';
              vv += ' kw. ' + v.slice(-4);
            }
            columnLegend.push(vv);
          }
        });
      }
    });
    data.forEach(function(val, i) {
      if (i > 0) {
        val.forEach(function(v, j) {
          if (j === columnId) {
            v = num(v);
            columnData.push(v);
          }
        });
      }
    });

    columnLegend = columnLegend.slice(-interval*4);
    columnData = columnData.slice(-interval*4);
    columnLegend.push('');

    if (columnData.length > 0 && !params.report) {
      columnData.push(columnData.slice(-1)[0]);
    }

    if (chartType === 'abs') {
      columnData.forEach(function(val, i) {
        columnData[i] *= area;
      });
    }

    var index = 0;
    if (locationType !== 'miasto') {
      index = 1;
    }

    if (columnData.length > 1) {
      // chart.series[index].update({
      //   data: columnData,
      //   color: colors[index],
      // });
      var seriesData = columnData.map(function(y) { return {y: y}; });
      seriesData[seriesData.length - 1] = {
        y: columnData.slice(-1)[0],
        marker: { enabled: true, fillColor: colors[index] },
        dataLabels: {
          enabled: !!params.report,
          formatter: function() {
            return this.y.toFixed(0);
          },
          align: 'left',
          y: 10,
          x: 2,
          style: {
            fontWeight: "normal",
            textOutline: "none"
          }
        }
      };
      chart.series[index].setData(seriesData);
      chart.xAxis[0].update({
        categories: columnLegend
      });

      // line points
      var arr = [];
      for (var i = 0; i < interval*4-1; i++) {
        arr.push(null);
      }
      arr.push(columnData.slice(-1)[0]);
      // chart.series[index+2].update({
      //   data: arr,
      //   color: colors[index],
      //   marker: {
      //     fillColor: colors[index]
      //   }
      // });

      // offer point
      if (cena) {
        var arr2 = arr;
        arr2[arr2.length-1] = chartType === 'abs' ? cena : cenaZaM2;
        if(params.report) {
          for(var i = 0; i < arr2.length - 1; ++i) {
            arr2[i] = {
              y: arr2[arr2.length-1],
            }
          }
          arr2[arr2.length-1] = {
            y: arr2[arr2.length-1],
            marker: { enabled: true },
            dataLabels: {
              enabled: !!params.report,
              formatter: function() {
                return this.y.toFixed(0);
              },
              align: 'left',
              y: 10,
              x: 2,
              style: {
                fontWeight: "normal",
                textOutline: "none"
              }
            }
          }
        } else {
          arr2.unshift(null);
        }
        chart.series[4].update({
          data: arr2,
          color: colors[2],
          type: 'line',
          dashStyle: 'dash',
          marker: {
            enabled: !params.report,
            fillColor: colors[2]
          }
        });
      }

      // legend
      $('.legend-horizontal .label-'+index+'-serie .name').text(locationName);
      $('.legend-horizontal .label-'+index+'-serie .value').text(formatPrice(Math.round(columnData.slice(-1)[0])));
      var offerVal = chartType === 'm2' ? parseInt(cenaZaM2) : cena;
      if(params.report) {
        $('.legend-horizontal .label-offer').show();
        $('.legend-horizontal .label-offer .description').text('To mieszkanie');

      }
      $('.legend-horizontal .label-offer .value').text(formatPrice(Math.round(offerVal)));

      $('body').removeClass('hidden');
    } else {
      $('.legend-horizontal .label-'+index+'-serie').hide();
    }

    // update x axis labels opacity
    $('.highcharts-xaxis-labels').children().each(function() {
      var label = $(this);
      if (label.text().slice(0, 1) !== 'X') {
        label.css('opacity', params.report ? 1 : .5);
      }
    });
  };

  var isLocationOnList = function(location, data) {
    var result = false;
    data.forEach(function(val) {
      if (location === val.split('[zl]')[0]) {
        result = true;
      }
    });
    return result;
  };

  loadData({
    locationType: 'miasto',
    locationId: miasto,
  }, function(result) {
    if (result) {
      if (isLocationOnList(miasto, result[0])) {
        // miasto jest na liscie
        drawChart(result, 'miasto', miasto, miastoNazwa, (onlyTrends ? 'm2': 'abs'), 2, powierzchnia);
        savedData.push(result);
        savedDataMeta.push('miasto');

        if (typNieruchomosci === 101) {
          loadData({
            locationType: 'dzielnica',
            locationId: dzielnica,
            parentLocationId: miasto
          }, function(result) {
            if (result) {
              // laduj dzielnice
              drawChart(result, 'dzielnica', dzielnica, dzielnicaNazwa, (onlyTrends ? 'm2': 'abs'), 2, powierzchnia);
              savedData.push(result);
              savedDataMeta.push('dzielnica');
            } else {
              // nie znaleziono dzielnicy
              $('.legend-horizontal .label-1-serie').hide();
            }
          });
        } else {
          $('.legend-horizontal .label-1-serie').hide();
        }
      } else {
        // nie znaleziono miasta
        // laduj wojewodztwo
        loadData({
          locationType: 'wojewodztwo',
          locationId: wojewodztwo
        }, function(result) {
          if (result) {
            drawChart(result, 'wojewodztwo', wojewodztwo, wojewodztwoNazwa, (onlyTrends ? 'm2': 'abs'), 2, powierzchnia);
            savedData.push(result);
            savedDataMeta.push('wojewodztwo');
          }
        });
        $('.legend-horizontal .label-0-serie').hide();
      }

    } else {
      //
    }
  });

  if (onlyTrends) {
    $('.tabs [data-val="abs"]').remove()
    $('.tabs [data-val="m2"]').addClass('active');
    $('.legend-horizontal .label-offer').hide();
  }

  $('.tabs a').on('click', function(e) {
    var el = $(this),
      val = el.parent().data('val');

    el.parent().addClass('active')
    .siblings().removeClass('active');

    currentChartType = $('.tabs.type .active').data('val');

    var currentChartInterval = $('.tabs.interval .active').data('val');

    if (savedDataMeta.indexOf('miasto') > -1) {
      drawChart(savedData[0], 'miasto', miasto, miastoNazwa, currentChartType, currentChartInterval, powierzchnia);
    }
    if (savedDataMeta.indexOf('dzielnica') > -1) {
      drawChart(savedData[1], 'dzielnica', dzielnica, dzielnicaNazwa, currentChartType, currentChartInterval, powierzchnia);
    }
    if (savedDataMeta.indexOf('wojewodztwo') > -1) {
      drawChart(savedData[0], 'wojewodztwo', wojewodztwo, wojewodztwoNazwa, currentChartType, currentChartInterval, powierzchnia);
    }

    e.preventDefault();
    e.stopImmediatePropagation()
  });

  $('.chart-price-time').highcharts({
    chart: {
      spacing: [12, 0, 0, 0]
    },
    title: {
      text: ''
    },
    colors: colors,
    xAxis: {
      tickWidth: 0,
      gridLineWidth: 1,
      gridLineColor: '#a5c2b3',
      labels: {
        align: 'center',
        useHTML: true,
        style: {
          fontSize: "10px",
          color: document.location.search.indexOf("report=1")==-1 ? "#62b14a" : "black"
        },
      },
      lineColor: 'transparent',
    },
    yAxis: {
      title: {
        enabled: false
      },
      gridLineWidth: 1,
      gridLineColor: '#a5c2b3',
      style: {
        color: '#62b14a'
      },
      opposite: false,
      labels: {
        useHTML: true,
        formatter: function () {
          var color = document.location.search.indexOf("report=1")==-1 ? "#62b14a" : "black"
          var unit = ' zł' + (currentChartType == 'm2' ? '/m<sup>2</sup></span>' : '');
          return '<span style="color: ' + color + ';">' + formatPrice(Math.round(this.value)) + unit;
        },
      },
    },
    tooltip: {
      enabled: true,
      backgroundColor: '#FFFFFF',
      borderColor: null,
      borderWidth: 0,
      style: {"fontSize": "11px", "color": "#62b14a"},
      formatter: function () {
        return formatPrice(Math.round(this.y))  + ' zł';
      }
    },
    legend: {
      enabled: false
    },
    credits: {
      enabled: false
    },
    plotOptions: {
      line: {
        dataLabels: {
          allowOverlap: true
        },
        marker: {
          enabled: true,
          lineWidth: 0,
          radius: 5,
          width: 10,
          height: 10,
          symbol: 'circle'
        }
      },
      area: {
          dataLabels: {
            allowOverlap: true
          },
          fillColor: {
            linearGradient: {
              x1: 0,
              y1: 0,
              x2: 0,
              y2: 1
            },
            stops: [
              [0, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.7).get('rgba')],
              [1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]
            ]
          },
          marker: {
            enabled: true,
            lineWidth: 0,
            radius: 5,
            width: 10,
            height: 10,
            symbol: 'circle'
          },
          lineWidth: params.report ? 2 : 1,
          states: {
              hover: {
                  lineWidth: 1
              }
          },
          threshold: null
      }
    },
    series: [{
      animation: document.location.search.indexOf("report=1")==-1,
      data: [],
      dataLabels: {
          enabled: !!params.report,
          formatter: function() {
            return this.y.toFixed(0);
          },
          style: {
            fontWeight: "normal",
            textOutline: "none"
          }
      },
      marker: {
        enabled: false
      },
      type: 'area',
      fillColor: {
        stops: [
          [0, Highcharts.Color(colors[0]).setOpacity(0.4).get('rgba')],
          [1, Highcharts.Color(colors[0]).setOpacity(params.report ? 0.4 : 0.1).get('rgba')]
        ]
      }
    }, {
      animation: document.location.search.indexOf("report=1")==-1,
      data: [],
      dataLabels: {
          enabled: !!params.report,
          formatter: function() {
            return this.y.toFixed(0);
          },
          style: {
            fontWeight: "normal",
            textOutline: "none"
          }
      },
      marker: {
        enabled: false
      },
      type: 'area',
      fillColor: {
        stops: [
          [0, Highcharts.Color(colors[1]).setOpacity(0.4).get('rgba')],
          [1, Highcharts.Color(colors[1]).setOpacity(params.report ? 0.4 : 0.2).get('rgba')]
        ]
      }
    }, {}, {}, {}],
  });
  chart = $('.chart-price-time').highcharts();

  $('body').addClass('init hidden');

  if (params.report) {
    $('html').addClass('from-report');
  }

  var u1Url = '/?utm_source=otodom.pl&utm_medium=widget-trendow&utm_campaign=Widgety';

  $('.logo')
  .attr('href', u1Url + (params.listing == 'true' ? '&utm_content=logo-listing' : '&utm_content=logo-adpage'))
  .click(function(e) {
    e.stopImmediatePropagation();
  });

  $('.link-to-u1').click(function() {
    window.open(u1Url + (params.listing == 'true' ? '&utm_content=listing' : '&utm_content=adpage'), '_blank');
  });

});
